# en_US resources
signature="sIgNaTuRe"
###
###
true.label                                                        = "True"
false.label                                                       = "False"
###
###
ManagedEntity.Status.gray.label                                   = "Gray"
ManagedEntity.Status.gray.summary                                 = "No status available"
ManagedEntity.Status.green.label                                  = "Green"
ManagedEntity.Status.green.summary                                = "Green indicates normal operation"
ManagedEntity.Status.yellow.label                                 = "Yellow"
ManagedEntity.Status.yellow.summary                               = "Yellow indicates an error"
ManagedEntity.Status.red.label                                    = "Red"
ManagedEntity.Status.red.summary                                  = "Red indicates an error"
###
###
VirtualMachine.GuestHeartbeatStatus.gray.label                    = "Gray"
VirtualMachine.GuestHeartbeatStatus.gray.summary                  = "No status available"
VirtualMachine.GuestHeartbeatStatus.green.label                   = "Green"
VirtualMachine.GuestHeartbeatStatus.green.summary                 = "Normal operation"
VirtualMachine.GuestHeartbeatStatus.yellow.label                  = "Yellow"
VirtualMachine.GuestHeartbeatStatus.yellow.summary                = "Intermittent heartbeat"
VirtualMachine.GuestHeartbeatStatus.red.label                     = "Red"
VirtualMachine.GuestHeartbeatStatus.red.summary                   = "No heartbeat"
###
##
VirtualMachine.PowerState.poweredOff.label                        = "Powered Off"
VirtualMachine.PowerState.poweredOff.summary                      = "Virtual machine is powered Off"
VirtualMachine.PowerState.poweredOn.label                         = "Powered On"
VirtualMachine.PowerState.poweredOn.summary                       = "Virtual machine is powered On"
VirtualMachine.PowerState.suspended.label                         = "Suspended"
VirtualMachine.PowerState.suspended.summary                       = "Virtual machine is suspended"
###
###
VirtualMachine.MovePriority.lowPriority.label                     = "Low priority"
VirtualMachine.MovePriority.lowPriority.summary                   = "Minimize impact on other running virtual machines"
VirtualMachine.MovePriority.highPriority.label                    = "High priority"
VirtualMachine.MovePriority.highPriority.summary                  = "Assign more resources to the virtual machine to speed up the migration"
VirtualMachine.MovePriority.defaultPriority.label                 = "Default priority"
VirtualMachine.MovePriority.defaultPriority.summary               = "Use normal amount of migration resources"
###
###
VirtualMachine.FaultToleranceState.notConfigured.label            = "Not configured"
VirtualMachine.FaultToleranceState.notConfigured.summary          = "Fault Tolerance has not been configured for this virtual machine"
VirtualMachine.FaultToleranceState.disabled.label                 = "Disabled"
VirtualMachine.FaultToleranceState.disabled.summary               = "Fault Tolerance is disabled"
VirtualMachine.FaultToleranceState.enabled.label                  = "Enabled"
VirtualMachine.FaultToleranceState.enabled.summary                = "Fault Tolerance is enabled"
VirtualMachine.FaultToleranceState.needSecondary.label            = "Need Secondary VM"
VirtualMachine.FaultToleranceState.needSecondary.summary          = "Fault Tolerant Secondary VM is not running"
VirtualMachine.FaultToleranceState.starting.label                 = "Starting"
VirtualMachine.FaultToleranceState.starting.summary               = "Fault Tolerance is starting"
VirtualMachine.FaultToleranceState.running.label                  = "Running"
VirtualMachine.FaultToleranceState.running.summary                = "Fault Tolerance is running"
###
###
HostSystem.ConnectionState.connected.label                        = "Connected"
HostSystem.ConnectionState.connected.summary                      = "Host is connected"
HostSystem.ConnectionState.notResponding.label                    = "Not responding"
HostSystem.ConnectionState.notResponding.summary                  = "vCenter Server is not receiving heartbeats from the host"
HostSystem.ConnectionState.disconnected.label                     = "Disconnected"
HostSystem.ConnectionState.disconnected.summary                   = "The user has explicitly taken the host down"
###
###
HostSystem.PowerState.poweredOn.label                             = "Powered On"
HostSystem.PowerState.poweredOn.summary                           = "Host is powered On"
HostSystem.PowerState.poweredOff.label                            = "Powered Off"
HostSystem.PowerState.poweredOff.summary                          = "Host is powered Off"
HostSystem.PowerState.standBy.label                               = "Standby"
HostSystem.PowerState.standBy.summary                             = "Host is in standby mode"
HostSystem.PowerState.unknown.label                               = "Unknown"
HostSystem.PowerState.unknown.summary                             = "Host power state cannot be determined"
###
###
Datastore.Accessible.True.label                                   = "Connected"
Datastore.Accessible.True.summary                                 = "Datastore is connected"
Datastore.Accessible.False.label                                  = "Disconnected"
Datastore.Accessible.False.summary                                = "Datastore is disconnected"
###
###
alarm.MetricAlarmExpression.MetricOperator.isAbove.label          = "Is above"
alarm.MetricAlarmExpression.MetricOperator.isAbove.summary        = "Test if the target metric item is above a given value"
alarm.MetricAlarmExpression.MetricOperator.isBelow.label          = "Is below"
alarm.MetricAlarmExpression.MetricOperator.isBelow.summary        = "Test if the target metric item is below a given value"
###
###
alarm.StateAlarmExpression.StateOperator.isEqual.label            = "Is equal to"
alarm.StateAlarmExpression.StateOperator.isEqual.summary          = "Test if the target state is a given state"
alarm.StateAlarmExpression.StateOperator.isUnequal.label          = "Not equal to"
alarm.StateAlarmExpression.StateOperator.isUnequal.summary        = "Test if the target state is not a given state"
###
###
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.first.label   = "First"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.first.summary = "First week of the month"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.second.label  = "Second"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.second.summary = "Second week of the month"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.third.label   = "Third"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.third.summary = "Third week of the month"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.fourth.label  = "Fourth"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.fourth.summary = "Fourth week of the month"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.last.label    = "Last"
scheduler.MonthlyByWeekdayTaskScheduler.WeekOfMonth.last.summary  = "Last week of the month"
###
###
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.sunday.label    = "Sunday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.sunday.summary  = "Sunday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.monday.label    = "Monday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.monday.summary  = "Monday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.tuesday.label   = "Tuesday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.tuesday.summary = "Tuesday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.wednesday.label = "Wednesday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.wednesday.summary = "Wednesday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.thursday.label  = "Thursday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.thursday.summary = "Thursday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.friday.label    = "Friday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.friday.summary  = "Friday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.saturday.label  = "Saturday"
scheduler.MonthlyByWeekdayTaskScheduler.DayOfWeek.saturday.summary = "Saturday"
###
###
PerformanceManager.CounterInfo.RollupType.all.label               = "All"
PerformanceManager.CounterInfo.RollupType.all.summary             = "All performance counter values collected"
PerformanceManager.CounterInfo.RollupType.average.label           = "Average"
PerformanceManager.CounterInfo.RollupType.average.summary         = "Average performance counter value collected"
PerformanceManager.CounterInfo.RollupType.minimum.label           = "Minimum"
PerformanceManager.CounterInfo.RollupType.minimum.summary         = "Minimum performance counter value collected"
PerformanceManager.CounterInfo.RollupType.maximum.label           = "Maximum"
PerformanceManager.CounterInfo.RollupType.maximum.summary         = "Maximum performance counter value collected"
PerformanceManager.CounterInfo.RollupType.latest.label            = "Latest"
PerformanceManager.CounterInfo.RollupType.latest.summary          = "Latest performance counter value collected"
PerformanceManager.CounterInfo.RollupType.summation.label         = "Summation"
PerformanceManager.CounterInfo.RollupType.summation.summary       = "Summation performance counter value collected"
PerformanceManager.CounterInfo.RollupType.none.label              = "None"
PerformanceManager.CounterInfo.RollupType.none.summary            = "No rollup performed"
###
###
PerformanceManager.CounterInfo.StatsType.normalized.label         = "Normalized"
PerformanceManager.CounterInfo.StatsType.normalized.summary       = "Normalized statistic collection"
PerformanceManager.CounterInfo.StatsType.delta.label              = "Delta"
PerformanceManager.CounterInfo.StatsType.delta.summary            = "Delta statistic collection"
PerformanceManager.CounterInfo.StatsType.absolute.label           = "Absolute"
PerformanceManager.CounterInfo.StatsType.absolute.summary         = "Absolute statistic collection"
PerformanceManager.CounterInfo.StatsType.rate.label               = "Rate"
PerformanceManager.CounterInfo.StatsType.rate.summary             = "Rate statistic collection"
###
###
TaskInfo.State.error.label                                        = "Error"
TaskInfo.State.error.summary                                      = "Task completed with a failure"
TaskInfo.State.queued.label                                       = "Queued"
TaskInfo.State.queued.summary                                     = "Task is queued"
TaskInfo.State.running.label                                      = "Running"
TaskInfo.State.running.summary                                    = "Task is in progress"
TaskInfo.State.success.label                                      = "Success"
TaskInfo.State.success.summary                                    = "Task completed successfully"
###
###
LicenseManager.FeatureInfo.CostUnit.host.label                    = "Per host"
LicenseManager.FeatureInfo.CostUnit.host.summary                  = "Per host"
LicenseManager.FeatureInfo.CostUnit.cpuCore.label                 = "Per CPU core"
LicenseManager.FeatureInfo.CostUnit.cpuCore.summary               = "Per CPU core"
LicenseManager.FeatureInfo.CostUnit.cpuPackage.label              = "Per CPU package"
LicenseManager.FeatureInfo.CostUnit.cpuPackage.summary            = "Per CPU package"
LicenseManager.FeatureInfo.CostUnit.server.label                  = "Per server"
LicenseManager.FeatureInfo.CostUnit.server.summary                = "Per server"
LicenseManager.FeatureInfo.CostUnit.vm.label                      = "Per virtual machine"
LicenseManager.FeatureInfo.CostUnit.vm.summary                    = "Per virtual machine"
###
###
LicenseManager.LicenseKeys.esxFull.label                          = "ESX Server Standard"
LicenseManager.LicenseKeys.esxFull.summary                        = "ESX Server Standard"
LicenseManager.LicenseKeys.esxExpress.label                       = "ESX Server Foundation"
LicenseManager.LicenseKeys.esxExpress.summary                     = "ESX Server Foundation"
LicenseManager.LicenseKeys.esxBasic.label                         = "ESX Server Standalone"
LicenseManager.LicenseKeys.esxBasic.summary                       = "ESX Server Standalone"
LicenseManager.LicenseKeys.esxVdi.label                           = "ESX Server VDI"
LicenseManager.LicenseKeys.esxVdi.summary                         = "ESX Server VDI"
LicenseManager.LicenseKeys.esxVmx.label                           = "ESX Virtual Desktop VM"
LicenseManager.LicenseKeys.esxVmx.summary                         = "ESX Virtual Desktop VM"
LicenseManager.LicenseKeys.san.label                              = "SAN Usage"
LicenseManager.LicenseKeys.san.summary                            = "SAN usage"
LicenseManager.LicenseKeys.iscsi.label                            = "iSCSI Usage"
LicenseManager.LicenseKeys.iscsi.summary                          = "iSCSI usage"
LicenseManager.LicenseKeys.nas.label                              = "NAS Usage"
LicenseManager.LicenseKeys.nas.summary                            = "NAS usage"
LicenseManager.LicenseKeys.vsmp.label                             = "Up to 4-way virtual SMP"
LicenseManager.LicenseKeys.vsmp.summary                           = "Up to 4-way virtual SMP"
LicenseManager.LicenseKeys.backup.label                           = "VMware Consolidated Backup"
LicenseManager.LicenseKeys.backup.summary                         = "VMware Consolidated Backup"
LicenseManager.LicenseKeys.vc.label                               = "vCenter Management Server"
LicenseManager.LicenseKeys.vc.summary                             = "vCenter Management Server"
LicenseManager.LicenseKeys.vcExpress.label                        = "vCenter Foundation Management Server"
LicenseManager.LicenseKeys.vcExpress.summary                      = "vCenter Foundation Management Server"
LicenseManager.LicenseKeys.esxHost.label                          = "vCenter agent for ESX Server"
LicenseManager.LicenseKeys.esxHost.summary                        = "vCenter agent for ESX Server"
LicenseManager.LicenseKeys.serverHost.label                       = "vCenter agent for vCenter Server"
LicenseManager.LicenseKeys.serverHost.summary                     = "vCenter agent for vCenter Server"
LicenseManager.LicenseKeys.vmotion.label                          = "VMotion"
LicenseManager.LicenseKeys.vmotion.summary                        = "VMotion"
LicenseManager.LicenseKeys.drs.label                              = "VMware DRS"
LicenseManager.LicenseKeys.drs.summary                            = "VMware DRS"
LicenseManager.LicenseKeys.das.label                              = "VMware HA"
LicenseManager.LicenseKeys.das.summary                            = "VMware HA"
LicenseManager.LicenseKeys.Unlicensed.label                       = "ESX Edition"
LicenseManager.LicenseKeys.Unlicensed.summary                     = "ESX Edition"
LicenseManager.LicenseKeys.gsxHost.label                          = "vCenter agent for GSX Server"
LicenseManager.LicenseKeys.gsxHost.summary                        = "vCenter agent for GSX Server"
LicenseManager.LicenseKeys.GSXHOST.label                          = "vCenter agent for GSX Server"
LicenseManager.LicenseKeys.GSXHOST.summary                        = "vCenter agent for GSX Server"
LicenseManager.LicenseKeys.drsPower.label                         = "VMware DRS Power Management"
LicenseManager.LicenseKeys.drsPower.summary                       = "VMware DRS Power Management"
LicenseManager.LicenseKeys.svmotion.label                         = "Storage VMotion"
LicenseManager.LicenseKeys.svmotion.summary                       = "Storage VMotion"
###
###
LicenseManager.LicenseState.initializing.label                    = "Initializing"
LicenseManager.LicenseState.initializing.summary                  = "Setting or resetting configuration in progress"
LicenseManager.LicenseState.normal.label                          = "Normal"
LicenseManager.LicenseState.normal.summary                        = "Running within operating parameters"
LicenseManager.LicenseState.marginal.label                        = "Cached"
LicenseManager.LicenseState.marginal.summary                      = "License source unavailable, using license cache"
LicenseManager.LicenseState.fault.label                           = "Not completed or expired"
LicenseManager.LicenseState.fault.summary                         = "Initialization not completed or grace period expired"
###
###
event.EventDescription.EventCategory.info.label                   = "info"
event.EventDescription.EventCategory.info.summary                 = "Information"
event.EventDescription.EventCategory.warning.label                = "warning"
event.EventDescription.EventCategory.warning.summary              = "Warning"
event.EventDescription.EventCategory.error.label                  ="error"
event.EventDescription.EventCategory.error.summary                ="Error"
event.EventDescription.EventCategory.user.label                   ="user"
event.EventDescription.EventCategory.user.summary                 ="User"
###
###
fault.Device.connected.true.label                                 = "Currently connected device"
fault.Device.connected.false.label                                = "Device"
fault.NIC.connected.true.label                                    = "Currently connected network interface"
fault.NIC.connected.false.label                                   = "Network interface"
fault.Snapshot.revert.errors.true.label                           ="Errors"
fault.Snapshot.revert.errors.false.label                          ="Warning"
fault.VMotion.atSourceHost.true.label                             ="Source"
fault.VMotion.atSourceHost.false.label                            ="Destination"
fault.VMotion.tooManyRODisks.true.label                           = "Not completed due to time-out"
fault.VMotion.tooManyRODisks.false.label                          ="Delay"
fault.DeviceNotSupported.Reason.host.label                        = "This is a general limitation of the virtual machine's virtual hardware version on the selected host."
fault.DeviceNotSupported.Reason.guest.label                       = "This is not a limitation of the host in general, but of the virtual machine's configured guest OS on the selected host."
fault.CpuIncompatible1ECX.sse3.true.label                         = "* SSE3; refer to KB article 1993 for a possible solution."
fault.CpuIncompatible1ECX.sse3.false.label                        = ""
fault.CpuIncompatible1ECX.ssse3.true.label                        = "* SSSE3; refer to KB article 1993 for a possible solution."
fault.CpuIncompatible1ECX.ssse3.false.label                       = ""
fault.CpuIncompatible1ECX.sse41.true.label                        = "* SSE4.1; refer to KB article 1993 for a possible solution."
fault.CpuIncompatible1ECX.sse41.false.label                       = ""
fault.CpuIncompatible1ECX.sse42.true.label                        = "* SSE4.2; refer to KB article 1993 for a possible solution."
fault.CpuIncompatible1ECX.sse42.false.label                       = ""
fault.CpuIncompatible1ECX.otherOnly.true.label                    = "* General incompatibilities; refer to KB article 1993 for possible solutions."
fault.CpuIncompatible1ECX.otherOnly.false.label                   = ""
fault.CpuIncompatible81EDX.nx.true.label                          ="* NX/XD (data execution protection). If the virtual machine does not need this feature, power Off the virtual machine and remove the NX/XD requirement by editing the virtual machine settings (advanced options)."
fault.CpuIncompatible81EDX.nx.false.label                         = ""
fault.CpuIncompatible81EDX.ffxsr.true.label                       = "* FFXSR; refer to KB article 1993 for a possible solution."
fault.CpuIncompatible81EDX.ffxsr.false.label                      = ""
fault.CpuIncompatible81EDX.rdtscp.true.label                      = "* RDTSCP; refer to KB article 1993 for a possible solution."
fault.CpuIncompatible81EDX.rdtscp.false.label                     = ""
fault.CpuIncompatible81EDX.lm.true.label                          = "* Longmode; required when a virtual machine is configured for a 64-bit guest OS. Note that for systems with Intel CPUs, enabling VT in the BIOS is required for longmode support."
fault.CpuIncompatible81EDX.lm.false.label                         = ""
fault.CpuIncompatible81EDX.otherOnly.true.label                   = "* General incompatibilities; refer to KB article 1993 for possible solutions."
fault.CpuIncompatible81EDX.otherOnly.false.label                  = ""
fault.FaultToleranceCpuIncompatible.model.true.label              = "CPU model does not match"
fault.FaultToleranceCpuIncompatible.model.false.label             = ""
fault.FaultToleranceCpuIncompatible.family.true.label             = "CPU family does not match"
fault.FaultToleranceCpuIncompatible.family.false.label            = ""
fault.FaultToleranceCpuIncompatible.stepping.true.label           = "CPU stepping does not match"
fault.FaultToleranceCpuIncompatible.stepping.false.label          = ""
fault.HostIncompatibleForRecordReplay.Reason.product.label        = "This VMware product does not suppport Record/Replay capabilities."
fault.HostIncompatibleForRecordReplay.Reason.processor.label      = "This product supports Record/Replay, but the host processor does not."
fault.HostIncompatibleForFaultTolerance.Reason.product.label      = "This VMware product does not suppport Fault Tolerance."
fault.HostIncompatibleForFaultTolerance.Reason.processor.label    = "This product supports Fault Tolerance, but the host processor does not."
fault.NumVirtualCpusIncompatible.Reason.recordReplay.label        = "Record/Replay"
fault.NumVirtualCpusIncompatible.Reason.faultTolerance.label      = "Fault Tolerance"
fault.UnsupportedOperation.snapshotCreate.label                   = "Reasons a snapshot cannot be created"
fault.UnsupportedOperation.snapshotRemove.label                   = "Reasons a snapshot cannot be removed"

###
###
vm.device.VirtualUSBController.autoConnectDevices.true.label      ="Enabled"
vm.device.VirtualUSBController.autoConnectDevices.false.label     ="Disabled"
vm.device.VirtualUSBController.ehciEnabled.true.label             ="Enabled"
vm.device.VirtualUSBController.ehciEnabled.false.label            ="Disabled"
###
###
auth.Permission.propagate.true.label                              ="Enabled"
auth.Permission.propagate.false.label                             ="Disabled"
###
###
DiagnosticsManager.LogDescriptor.Format.plain.label               = "Plain"
DiagnosticsManager.LogDescriptor.Format.plain.summary             = "A text-based log file"
DiagnosticsManager.LogDescriptor.Format.report.label              = "Report"
DiagnosticsManager.LogDescriptor.Format.report.summary            = "A report"
###
###
PatchManager.Status.Reason.installed.label                        = "Installed"
PatchManager.Status.Reason.installed.summary                      = "Update has been installed."
PatchManager.Status.Reason.pending.label                          = "Pending"
PatchManager.Status.Reason.pending.summary                        = "Host should be restarted to see the effect."
PatchManager.Status.Reason.obsoleted.label                        = "Obsolete"
PatchManager.Status.Reason.obsoleted.summary                      = "The update is obsolete."
PatchManager.Status.Reason.missingPatch.label                     = "Missing patch"
PatchManager.Status.Reason.missingPatch.summary                   = "Necessary patch not installed."
PatchManager.Status.Reason.missingLib.label                       = "Missing library"
PatchManager.Status.Reason.missingLib.summary                     = "Library or rpm's missing."
PatchManager.Status.Reason.hasDependentPatch.label                = "Has dependent patch"
PatchManager.Status.Reason.hasDependentPatch.summary              = "Dependent patch is in the scan list of updates."
PatchManager.Status.Reason.conflictPatch.label                    = "Conflict patch"
PatchManager.Status.Reason.conflictPatch.summary                  = "Patch conflict patch installed on the host."
PatchManager.Status.Reason.conflictLib.label                      = "Conflict library"
PatchManager.Status.Reason.conflictLib.summary                    = "Patch conflicts with existing libraries installed on host."
###
FileManager.FileType.File.label                                   = "File"
FileManager.FileType.File.summary                                 = "Operation to be performed on a file."
FileManager.FileType.VirtualDisk.label                            = "Virtual disk"
FileManager.FileType.VirtualDisk.summary                          = "Operation to be performed on a virtual disk"
###
host.NumericSensorInfo.HealthState.unknown.label                  = "Unknown"
host.NumericSensorInfo.HealthState.unknown.summary                = "Cannot report on the current health state of the element"
host.NumericSensorInfo.HealthState.green.label                    = "Green"
host.NumericSensorInfo.HealthState.green.summary                  = "Sensor is operating under normal conditions"
host.NumericSensorInfo.HealthState.yellow.label                   = "Yellow"
host.NumericSensorInfo.HealthState.yellow.summary                 = "Sensor is operating under conditions that are non-critical"
host.NumericSensorInfo.HealthState.red.label                      = "Red"
host.NumericSensorInfo.HealthState.red.summary                    = "Sensor is operating under critical conditions"
###
host.SystemIdentificationInfo.Identifier.AssetTag.label           = "Asset tag"
host.SystemIdentificationInfo.Identifier.AssetTag.summary         = "Asset tag of the system"
host.SystemIdentificationInfo.Identifier.ServiceTag.label         = "Service tag"
host.SystemIdentificationInfo.Identifier.ServiceTag.summary       = "Service tag of the system"
###
host.HardwareStatusInfo.HardwareElementInfo.Status.Unknown.label  = "Unknown"
host.HardwareStatusInfo.HardwareElementInfo.Status.Unknown.summary= "Cannot report on the current status of the physical element"
host.HardwareStatusInfo.HardwareElementInfo.Status.Green.label    = "Green"
host.HardwareStatusInfo.HardwareElementInfo.Status.Green.summary  = "Physical element is functioning as expected"
host.HardwareStatusInfo.HardwareElementInfo.Status.Yellow.label   = "Yellow"
host.HardwareStatusInfo.HardwareElementInfo.Status.Yellow.summary = "All functionality is available but some might be degraded"
host.HardwareStatusInfo.HardwareElementInfo.Status.Red.label      = "Red"
host.HardwareStatusInfo.HardwareElementInfo.Status.Red.summary    = "The physical element is failing"
###
VirtualMachine.NeedSecondaryReason.divergence.label               = "Divergence between Primary and Secondary VMs"
VirtualMachine.NeedSecondaryReason.divergence.summary             = "Failover due to divergence between Primary and Secondary VMs"
VirtualMachine.NeedSecondaryReason.lostConnection.label           = "Lost connection to Primary VM"
VirtualMachine.NeedSecondaryReason.lostConnection.summary         = "Failover due to loss of connection to the Primary VM"
VirtualMachine.NeedSecondaryReason.partialHardwareFailure.label   = "Partial hardware failure on primary host"
VirtualMachine.NeedSecondaryReason.partialHardwareFailure.summary = "Virtual machine stopped due to partial hardware failure on the primary host"
VirtualMachine.NeedSecondaryReason.userAction.label               = "User action"
VirtualMachine.NeedSecondaryReason.userAction.summary             = "Failover due to user action"
VirtualMachine.NeedSecondaryReason.other.label                    = "Other"
VirtualMachine.NeedSecondaryReason.other.summary                  = "Failover due to unknown reasons"
###
VmFailedStartingSecondaryEvent.FailureReason.incompatibleHost.label             = "Incompatible host for Secondary VM"
VmFailedStartingSecondaryEvent.FailureReason.incompatibleHost.summary           = "The remote host is incompatible with the Secondary VM"
VmFailedStartingSecondaryEvent.FailureReason.loginFailed.label                  = "Cannot complete login to secondary host"
VmFailedStartingSecondaryEvent.FailureReason.loginFailed.summary                = "Cannot complete login to secondary host"
VmFailedStartingSecondaryEvent.FailureReason.registerVmFailed.label             = "Cannot complete registration for the Secondary VM"
VmFailedStartingSecondaryEvent.FailureReason.registerVmFailed.summary           = "Cannot complete registration for the Secondary VM on the remote host"
VmFailedStartingSecondaryEvent.FailureReason.migrateFailed.label                = "Cannot complete migration for the Secondary VM"
VmFailedStartingSecondaryEvent.FailureReason.migrateFailed.summary              = "Error encountered while migrating the Secondary VM"
###
VmFaultToleranceVmTerminatedEvent.TerminateReason.divergence.label               = "Resynchronizing Primary and Secondary VMs"
VmFaultToleranceVmTerminatedEvent.TerminateReason.divergence.summary             = "Virtual machine paused to resynchronize Primary and Secondary VMs"
VmFaultToleranceVmTerminatedEvent.TerminateReason.lostConnection.label           = "Lost connection to Primary VM"
VmFaultToleranceVmTerminatedEvent.TerminateReason.lostConnection.summary         = "Virtual machine stopped due to loss of connection to the Primary VM"
VmFaultToleranceVmTerminatedEvent.TerminateReason.partialHardwareFailure.label   = "Partial hardware failure on primary host"
VmFaultToleranceVmTerminatedEvent.TerminateReason.partialHardwareFailure.summary = "Virtual machine stopped due to partial hardware failure on the primary host"
VmFaultToleranceVmTerminatedEvent.TerminateReason.userAction.label               = "User action"
VmFaultToleranceVmTerminatedEvent.TerminateReason.userAction.summary             = "Virtual machine stopped due to user action"
VmFaultToleranceVmTerminatedEvent.TerminateReason.other.label                    = "Other"
VmFaultToleranceVmTerminatedEvent.TerminateReason.other.summary                  = "Virtual machine stopped due to other reasons"
###
fault.AgentInstallFailed.Reason.NotEnoughSpaceOnDevice.label = "Not enough space on device"
fault.AgentInstallFailed.Reason.NotEnoughSpaceOnDevice.summary = "There is not enough storage space on the host to install the agent"
fault.AgentInstallFailed.Reason.PrepareToUpgradeFailed.label = "Cannot prepare host for upgrade"
fault.AgentInstallFailed.Reason.PrepareToUpgradeFailed.summary = "Cannot initialize the upgrade directory on the host"
fault.AgentInstallFailed.Reason.AgentNotReachable.label = "Agent not reachable"
fault.AgentInstallFailed.Reason.AgentNotReachable.summary = "Agent was installed but is not accessible"
fault.AgentInstallFailed.Reason.AgentNotRunning.label = "Agent not running"
fault.AgentInstallFailed.Reason.AgentNotRunning.summary = "Agent was installed but is not running"
fault.AgentInstallFailed.Reason.InstallTimedout.label = "Install timed out"
fault.AgentInstallFailed.Reason.InstallTimedout.summary = "The agent install exceeded the time limit"
fault.AgentInstallFailed.Reason.SignatureVerificationFailed.label = "Cannot verify the installer signature"
fault.AgentInstallFailed.Reason.SignatureVerificationFailed.summary = "Cannot verify the installer signature"
fault.AgentInstallFailed.Reason.AgentUploadFailed.label = "Cannot upload agent"
fault.AgentInstallFailed.Reason.AgentUploadFailed.summary = "Cannot upload the agent installer to the host"
fault.AgentInstallFailed.Reason.AgentUploadTimedout.label = "Agent upload timed out"
fault.AgentInstallFailed.Reason.AgentUploadTimedout.summary = "The agent upload exceeded the time limit"
fault.AgentInstallFailed.Reason.UnknownInstallerError.label = "Unknown installer error"
fault.AgentInstallFailed.Reason.UnknownInstallerError.summary = "Cannot install the agent for an unknown reason"
###
VmFaultToleranceConfigIssue.ReasonForIssue.haNotEnabled.label                   = "HA is not enabled on the virtual machine"
VmFaultToleranceConfigIssue.ReasonForIssue.haNotEnabled.summary                 = "Fault Tolerance requires an HA cluster; this virtual machine is not in an HA cluster or has HA disabled."
VmFaultToleranceConfigIssue.ReasonForIssue.moreThanOneSecondary.label           = "Secondary VM already exists"
VmFaultToleranceConfigIssue.ReasonForIssue.moreThanOneSecondary.summary         = "The virtual machine already has a Secondary VM"
VmFaultToleranceConfigIssue.ReasonForIssue.recordReplayNotSupported.label       = "Record/Replay functionality is not supported by the virtual machine"
VmFaultToleranceConfigIssue.ReasonForIssue.recordReplayNotSupported.summary     = "Record/Replay functionality is not supported by this virtual machine"
VmFaultToleranceConfigIssue.ReasonForIssue.replayNotSupported.label             = "The virtual machine's current configuration does not support Fault Tolerance"
VmFaultToleranceConfigIssue.ReasonForIssue.replayNotSupported.summary           = "The virtual machine's current configuration does not support Fault Tolerance. Enable Record/Replay in the virtual machine's settings. Or, power Off the virtual machine and turn On Fault Tolerance"
VmFaultToleranceConfigIssue.ReasonForIssue.templateVm.label                     = "Template virtual machine"
VmFaultToleranceConfigIssue.ReasonForIssue.templateVm.summary                   = "The virtual machine is a template"
VmFaultToleranceConfigIssue.ReasonForIssue.multipleVCPU.label                   = "Virtual machine with multiple virtual CPUs"
VmFaultToleranceConfigIssue.ReasonForIssue.multipleVCPU.summary                 = "The virtual machine has more than one virtual CPU"
VmFaultToleranceConfigIssue.ReasonForIssue.hostInactive.label                   = "Host inactive"
VmFaultToleranceConfigIssue.ReasonForIssue.hostInactive.summary                 = "The host is not active"
VmFaultToleranceConfigIssue.ReasonForIssue.ftUnsupportedHardware.label          = "Fault Tolerance not supported by host hardware"
VmFaultToleranceConfigIssue.ReasonForIssue.ftUnsupportedHardware.summary        = "The hardware on the host does not support Fault Tolerance. The physical CPU does not support replay."
VmFaultToleranceConfigIssue.ReasonForIssue.ftUnsupportedProduct.label           = "Fault Tolerance not supported by VMware Server 2.0"
VmFaultToleranceConfigIssue.ReasonForIssue.ftUnsupportedProduct.summary         = "VMware Server 2.0 does not support Fault Tolerance"
VmFaultToleranceConfigIssue.ReasonForIssue.missingVMotionNic.label              = "No VMotion license or no virtual NIC configured for VMotion"
VmFaultToleranceConfigIssue.ReasonForIssue.missingVMotionNic.summary            = "Fault Tolerance requires the host to have a VMotion license and a virtual NIC enabled for VMotion"
VmFaultToleranceConfigIssue.ReasonForIssue.missingFTLoggingNic.label            = "No virtual NIC configured for Fault Tolerance logging"
VmFaultToleranceConfigIssue.ReasonForIssue.missingFTLoggingNic.summary          = "Fault Tolerance requires the host to have a virtual NIC enabled for FT logging"
VmFaultToleranceConfigIssue.ReasonForIssue.verifySSLCertificateFlagNotSet.label    = "\"Check host certificates\" flag not set for vCenter Server"
VmFaultToleranceConfigIssue.ReasonForIssue.verifySSLCertificateFlagNotSet.summary  = "\"Check host certificates\" flag not set for vCenter Server"
VmFaultToleranceConfigIssue.ReasonForIssue.hasSnapshots.label    = "The virtual machine has one or more snapshots"
VmFaultToleranceConfigIssue.ReasonForIssue.hasSnapshots.summary  = "The virtual machine has one or more snapshots that make it incompatible for Fault Tolerance protection"
VmFaultToleranceConfigIssue.ReasonForIssue.noConfig.label        = "No configuration information for the virtual machine"
VmFaultToleranceConfigIssue.ReasonForIssue.noConfig.summary      = "The configuration information for the virtual machine is not available"
VmFaultToleranceConfigIssue.ReasonForIssue.ftSecondaryVm.label   = "Fault Tolerance Secondary VM"
VmFaultToleranceConfigIssue.ReasonForIssue.ftSecondaryVm.summary = "Fault Tolerance Secondary VM"
VmFaultToleranceConfigIssue.ReasonForIssue.hasLocalDisk.label    = "The virtual machine has one or more disks on local (non-shared) storage"
VmFaultToleranceConfigIssue.ReasonForIssue.hasLocalDisk.summary  = "The virtual machine has one or more disks on local (non-shared) storage"
###
VmFaultToleranceInvalidFileBacking.DeviceType.virtualFloppy.label               = "Virtual floppy"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualFloppy.summary             = "Virtual floppy"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualCdrom.label                = "Virtual CD-ROM"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualCdrom.summary              = "Virtual CD-ROM"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualSerialPort.label           = "Virtual serial port"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualSerialPort.summary         = "Virtual serial port"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualParallelPort.label         = "Virtual parallel port"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualParallelPort.summary       = "Virtual parallel port"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualDisk.label                 = "Virtual disk"
VmFaultToleranceInvalidFileBacking.DeviceType.virtualDisk.summary               = "Virtual disk"
###
CannotMoveFaultToleranceVm.MoveType.resourcePool.label               = "Resource pool"
CannotMoveFaultToleranceVm.MoveType.resourcePool.summary             = "Resource pool"
CannotMoveFaultToleranceVm.MoveType.cluster.label                    = "Cluster"
CannotMoveFaultToleranceVm.MoveType.cluster.summary                  = "Cluster"
###
FtIssuesOnHost.user.label            = "User"
FtIssuesOnHost.user.summary          = "The host is selected by the user."
FtIssuesOnHost.vc.label              ="vCenter
FtIssuesOnHost.vc.summary            = "The host is selected by vCenter"
FtIssuesOnHost.drs.label             = "DRS"
FtIssuesOnHost.drs.summary           = "The host is selected by DRS."
###
fault.DasConfigFault.DasConfigFaultReason.HostNetworkMisconfiguration.label = "Misconfiguration in the host network setup"
fault.DasConfigFault.DasConfigFaultReason.HostNetworkMisconfiguration.summary = "There is a misconfiguration in the host network setup. Fix the network misconfiguration and try again"
fault.DasConfigFault.DasConfigFaultReason.HostMisconfiguration.label = "Misconfiguration in the host setup"
fault.DasConfigFault.DasConfigFaultReason.HostMisconfiguration.summary = "There is a misconfiguration in the host setup. Fix the misconfiguration and try again"
fault.DasConfigFault.DasConfigFaultReason.InsufficientPrivileges.label = "Insufficient privileges for the operation"
fault.DasConfigFault.DasConfigFaultReason.InsufficientPrivileges.summary = "You have insufficient privileges for this operation"
fault.DasConfigFault.DasConfigFaultReason.NoPrimaryAgentAvailable.label = "Unable to contact a primary HA agent"
fault.DasConfigFault.DasConfigFaultReason.NoPrimaryAgentAvailable.summary = "Unable to contact a primary HA agent in the cluster. Check if the existing hosts have HA errors. Correct HA errors on existing hosts and try again"
fault.DasConfigFault.DasConfigFaultReason.Other.label = "Other HA configuration error"
fault.DasConfigFault.DasConfigFaultReason.Other.summary ="Cannot complete the HA configuration due to an internal error. Try again or contact support."
###
HostDasErrorEvent.HostDasErrorReason.configFailed.label           = "Cannot complete the HA configuration"
HostDasErrorEvent.HostDasErrorReason.configFailed.summary         = "There was an error configuring HA on the host"
HostDasErrorEvent.HostDasErrorReason.timeout.label           = "Time-out while communicating with the HA agent"
HostDasErrorEvent.HostDasErrorReason.timeout.summary         = "There was a time-out while communicating with the HA agent. This is usually transient."
HostDasErrorEvent.HostDasErrorReason.communicationInitFailed.label           = "Cannot complete HA communication initialization"
HostDasErrorEvent.HostDasErrorReason.communicationInitFailed.summary         = "There was an error initializing the HA communications module. Contact support."
HostDasErrorEvent.HostDasErrorReason.healthCheckScriptFailed.label           = "Error while running health check script"
HostDasErrorEvent.HostDasErrorReason.healthCheckScriptFailed.summary         = "There was an error while running the HA health check script. This is usually transient."
HostDasErrorEvent.HostDasErrorReason.agentFailed.label           = "HA agent on the host failed"
HostDasErrorEvent.HostDasErrorReason.agentFailed.summary         = "The HA agent on the host has an error. This is usually self-correcting. If the error persists or happens too often, contact support."
HostDasErrorEvent.HostDasErrorReason.agentShutdown.label           = "HA agent on the host has been shut down"
HostDasErrorEvent.HostDasErrorReason.agentShutdown.summary         = "The HA agent on the host has been shut down.  If this error persists, contact support."
HostDasErrorEvent.HostDasErrorReason.other.label           = "Unknown HA error"
HostDasErrorEvent.HostDasErrorReason.other.summary         = "There was an unknown HA error on the host"
###
VmShutdownOnIsolationEvent.Operation.shutdown.label           = "VM shutdown"
VmShutdownOnIsolationEvent.Operation.shutdown.summary         = "Virtual machine powered Off"
VmShutdownOnIsolationEvent.Operation.poweredOff.label           = "VM powered Off"
VmShutdownOnIsolationEvent.Operation.poweredOff.summary         = "Virtual machine was powered Off because the OS could not shut down."

HostDisconnectedEvent.ReasonCode.sslThumbprintVerifyFailed.label = "Cannot verify the SSL thumbprint"
HostDisconnectedEvent.ReasonCode.sslThumbprintVerifyFailed.summary = "Cannot verify the host SSL thumbprint"
HostDisconnectedEvent.ReasonCode.licenseExpired.label = "License expired"
HostDisconnectedEvent.ReasonCode.licenseExpired.summary = "The license for the host expired"
HostDisconnectedEvent.ReasonCode.agentUpgrade.label = "Agent upgrade"
HostDisconnectedEvent.ReasonCode.agentUpgrade.summary = "vCenter agent is being upgraded on the host"
HostDisconnectedEvent.ReasonCode.userRequest.label = "User request"
HostDisconnectedEvent.ReasonCode.userRequest.summary = "User requested host disconnect"
HostDisconnectedEvent.ReasonCode.insufficientLicenses.label = "Insufficient license on host"
HostDisconnectedEvent.ReasonCode.insufficientLicenses.summary = "Insufficient license on host."

###
host.VMotionManager.VMotionType.vmotion.label                        = "Regular VMotion"
host.VMotionManager.VMotionType.vmotion.summary                      = "Regular VMotion"
host.VMotionManager.VMotionType.fast_suspend_resume.label            = "Fast Suspend/Resume VMotion"
host.VMotionManager.VMotionType.fast_suspend_resume.summary          = "Fast Suspend/Resume VMotion"
host.VMotionManager.VMotionType.fault_tolerance.label                = "Fault Tolerance VMotion"
host.VMotionManager.VMotionType.fault_tolerance.summary              = "Fault Tolerance VMotion"
host.VMotionManager.VMotionType.disks_only.label                     = "Disks-Only VMotion"
host.VMotionManager.VMotionType.disks_only.summary                   = "Disks-Only VMotion"
host.VMotionManager.VMotionType.memory_mirror.label                  = "Memory Mirror VMotion"
host.VMotionManager.VMotionType.memory_mirror.summary                = "Memory Mirror VMotion"

###
com.vmware.vim.license.Feature.esxFull.label                          = "ESX Server Standard"
com.vmware.vim.license.Feature.esxFull.summary                        = "ESX Server Standard"
com.vmware.vim.license.Feature.esxExpress.label                       = "ESX Server Foundation"
com.vmware.vim.license.Feature.esxExpress.summary                     = "ESX Server Foundation"
com.vmware.vim.license.Feature.esxBasic.label                         = "ESX Server Standalone"
com.vmware.vim.license.Feature.esxBasic.summary                       = "ESX Server Standalone"
com.vmware.vim.license.Feature.esxVdi.label                           = "ESX Server VDI"
com.vmware.vim.license.Feature.esxVdi.summary                         = "ESX Server VDI"
com.vmware.vim.license.Feature.esxVmx.label                           = "ESX Virtual Desktop VM"
com.vmware.vim.license.Feature.esxVmx.summary                         = "ESX Virtual Desktop VM"
com.vmware.vim.license.Feature.san.label                              = "SAN Usage"
com.vmware.vim.license.Feature.san.summary                            = "SAN usage"
com.vmware.vim.license.Feature.iscsi.label                            = "iSCSI Usage"
com.vmware.vim.license.Feature.iscsi.summary                          = "iSCSI usage"
com.vmware.vim.license.Feature.nas.label                              = "NAS Usage"
com.vmware.vim.license.Feature.nas.summary                            = "NAS usage"
com.vmware.vim.license.Feature.vsmp.2.label                           = "Up to 2-way virtual SMP"
com.vmware.vim.license.Feature.vsmp.2.summary                         = "Up to 2-way virtual SMP"
com.vmware.vim.license.Feature.vsmp.label                             = "Up to 4-way virtual SMP"
com.vmware.vim.license.Feature.vsmp.summary                           = "Up to 4-way virtual SMP"
com.vmware.vim.license.Feature.vsmp.4.label                             = "Up to 4-way virtual SMP"
com.vmware.vim.license.Feature.vsmp.4.summary                           = "Up to 4-way virtual SMP"
com.vmware.vim.license.Feature.vsmp.8.label                           = "Up to 8-way virtual SMP"
com.vmware.vim.license.Feature.vsmp.8.summary                         = "Up to 8-way virtual SMP"
com.vmware.vim.license.Feature.maxRAM.256g.label                      = "Up to 256 GB of memory"
com.vmware.vim.license.Feature.maxRAM.256g.summary                    = "Up to 256 GB of memory"
com.vmware.vim.license.Feature.backup.label                           = "VMware Consolidated Backup"
com.vmware.vim.license.Feature.backup.summary                         = "VMware Consolidated Backup"
com.vmware.vim.license.Feature.vc.label                               = "vCenter Management Server"
com.vmware.vim.license.Feature.vc.summary                             = "vCenter Management Server"
com.vmware.vim.license.Feature.vcExpress.label                        = "vCenter Foundation Management Server"
com.vmware.vim.license.Feature.vcExpress.summary                      = "vCenter Foundation Management Server"
com.vmware.vim.license.Feature.esxHost.label                          = "vCenter agent for ESX Server"
com.vmware.vim.license.Feature.esxHost.summary                        = "vCenter agent for ESX Server"
com.vmware.vim.license.Feature.serverHost.label                       = "vCenter agent for vCenter Server"
com.vmware.vim.license.Feature.serverHost.summary                     = "vCenter agent for vCenter Server"
com.vmware.vim.license.Feature.vmotion.label                          = "VMotion"
com.vmware.vim.license.Feature.vmotion.summary                        = "VMotion"
com.vmware.vim.license.Feature.drs.label                              = "VMware DRS"
com.vmware.vim.license.Feature.drs.summary                            = "VMware DRS"
com.vmware.vim.license.Feature.das.label                              = "VMware HA"
com.vmware.vim.license.Feature.das.summary                            = "VMware HA"
com.vmware.vim.license.Feature.Unlicensed.label                       = "ESX Edition"
com.vmware.vim.license.Feature.Unlicensed.summary                     = "ESX Edition"
com.vmware.vim.license.Feature.gsxHost.label                          = "vCenter agent for GSX Server"
com.vmware.vim.license.Feature.gsxHost.summary                        = "vCenter agent for GSX Server"
com.vmware.vim.license.Feature.GSXHOST.label                          = "vCenter agent for GSX Server"
com.vmware.vim.license.Feature.GSXHOST.summary                        = "vCenter agent for GSX Server"
com.vmware.vim.license.Feature.drsPower.label                         = "VMware DRS Power Management"
com.vmware.vim.license.Feature.drsPower.summary                       = "VMware DRS Power Management"
com.vmware.vim.license.Feature.svmotion.label                         = "Storage VMotion"
com.vmware.vim.license.Feature.svmotion.summary                       = "Storage VMotion"
com.vmware.vim.license.Feature.ft.label                               = "VMware FT"
com.vmware.vim.license.Feature.ft.summary                             = "VMware FT"
com.vmware.vim.license.Feature.memplus.label                          = "Memory Overcommit"
com.vmware.vim.license.Feature.memplus.summary                        = "Memory Overcommit"
com.vmware.vim.license.Feature.mpio.label                             = "MPIO / Third-Party Multi-Pathing"
com.vmware.vim.license.Feature.mpio.summary                           = "MPIO / Third-Party Multi-Pathing"
com.vmware.vim.license.Feature.hotplug.label                          = "Hot-Pluggable Virtual HW"
com.vmware.vim.license.Feature.hotplug.summary                        = "Hot-Pluggable Virtual HW"
com.vmware.vim.license.Feature.hostprofile.label                      = "Host Profiles"
com.vmware.vim.license.Feature.hostprofile.summary                    = "Host Profiles"
com.vmware.vim.license.Feature.dvs.label                              = "Distributed Virtual Switch"
com.vmware.vim.license.Feature.dvs.summary                            = "Distributed Virtual Switch"
com.vmware.vim.license.Feature.vmsafe.label                           = "VMsafe"
com.vmware.vim.license.Feature.vmsafe.summary                         = "VMsafe"
com.vmware.vim.license.Feature.dvfilter.label                         = "DVfilter"
com.vmware.vim.license.Feature.dvfilter.summary                       = "DVfilter"
com.vmware.vim.license.Feature.storemon.label                         = "Storage Utilization Monitoring"
com.vmware.vim.license.Feature.storemon.summary                       = "Storage Utilization Monitoring"
com.vmware.vim.license.Feature.linkedvc.label                         = "Linked Mode"
com.vmware.vim.license.Feature.linkedvc.summary                       = "Linked Mode"
com.vmware.vim.license.Feature.woe.label                              = "Workflow Orchestration Engine"
com.vmware.vim.license.Feature.woe.summary                            = "Workflow Orchestration Engine"
com.vmware.vim.license.Feature.vshield.label                          = "vShield Zones"
com.vmware.vim.license.Feature.vshield.summary                        = "vShield Zones"
com.vmware.vim.license.Feature.dr.label                               = "Data Recovery"
com.vmware.vim.license.Feature.dr.summary                             = "Data Recovery"
com.vmware.vim.license.Feature.update.label                           = "Update Manager"
com.vmware.vim.license.Feature.update.summary                         = "Update Manager"
com.vmware.vim.license.Feature.vstorage.label                         = "vStorage APIs"
com.vmware.vim.license.Feature.vstorage.summary                       = "vStorage APIs"


com.vmware.vim.license.entitytype.hostEntity.label                    ="Host"
com.vmware.vim.license.entitytype.hostEntity.summary                  ="Host"
com.vmware.vim.license.entitytype.vcEntity.label                      = "vCenter Server"
com.vmware.vim.license.entitytype.vcEntity.summary                    = "vCenter Server"

com.vmware.vim.license.decodeError.licenseFileNotFound.labe           = "License file not found"
com.vmware.vim.license.decodeError.licenseFileNotFound.summary        = "License file not found."
com.vmware.vim.license.decodeError.invalidLicense.label               = "Invalid license"
com.vmware.vim.license.decodeError.invalidLicense.summary             = "License not valid."
com.vmware.vim.license.decodeError.licenseExpired.label               = "License expired"
com.vmware.vim.license.decodeError.licenseExpired.summary             = "License expired."
com.vmware.vim.license.decodeError.upgradeMissing.label               = "Upgrade key missing"
com.vmware.vim.license.decodeError.upgradeMissing.summary             = "Upgrade key missing for entered license."
com.vmware.vim.license.decodeError.internalError.label                = "Internal error"
com.vmware.vim.license.decodeError.internalError.summary              = "Internal error."
com.vmware.vim.license.decodeError.mismatch.label                     = "Invalid product license"
com.vmware.vim.license.decodeError.mismatch.summary                   = "License not valid for this product"
com.vmware.vim.license.decodeError.licenseIncompatible.label          = "License incompatible with product"
com.vmware.vim.license.decodeError.licenseIncompatible.summary        = "License incompatible with product"
com.vmware.vim.license.decodeError.unknownError.label                 = "Unknown license decode error"
com.vmware.vim.license.decodeError.unknownError.summary               = "Unknown license decode error."



com.vmware.vim.license.edition.esxEnterprise.label                    ="vSphere Enterprise"
com.vmware.vim.license.edition.esxEnterprise.summary                  ="vSphere Enterprise"
com.vmware.vim.license.edition.esxFull.label                          ="vSphere Standard"
com.vmware.vim.license.edition.esxFull.summary                        ="vSphere Standard"
com.vmware.vim.license.edition.esxExpress.label                       ="vSphere Foundation"
com.vmware.vim.license.edition.esxExpress.summary                     ="vSphere Foundation"
com.vmware.vim.license.edition.esxVdi.label                           ="vSphere VDI"
com.vmware.vim.license.edition.esxVdi.summary                         ="vSphere VDI"
com.vmware.vim.license.edition.esxBasic.label                         = "VMware ESXi"
com.vmware.vim.license.edition.esxBasic.summary                       = "VMware ESXi"
com.vmware.vim.license.edition.esxEval.label                          ="vSphere Evaluation"
com.vmware.vim.license.edition.esxEval.summary                        ="vSphere Evaluation"
com.vmware.vim.license.edition.vc.label                               = "vCenter Server Enterprise"
com.vmware.vim.license.edition.vc.summary                             = "vCenter Server Enterprise"
com.vmware.vim.license.edition.vcExpress.label                        = "vCenter Server Foundation"
com.vmware.vim.license.edition.vcExpress.summary                      = "vCenter Server Foundation"
com.vmware.vim.license.edition.vcEval.label                           = "vCenter Server Evaluation"
com.vmware.vim.license.edition.vcEval.summary                         = "vCenter Server Evaluation"

# License corrective action msgs
# Since this is not used as a VMODL enum, no need to set summary strings
com.vmware.vim.license.msgs.notinstalled.label                        = "Please install a license."
com.vmware.vim.license.msgs.notinstalled.summary                      = ""
com.vmware.vim.license.msgs.expired.label                             = "Check system date or install a new license."
com.vmware.vim.license.msgs.expired.summary                           = ""

###
